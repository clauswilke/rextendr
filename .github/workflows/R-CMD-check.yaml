on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release', rust-version: 'stable-msvc'}
          - {os: windows-latest, r: 'devel',   rust-version: 'stable-gnu',  rtools-version: '42'}
          - {os: macOS-latest,   r: 'release', rust-version: 'stable'     }
          - {os: ubuntu-20.04,   r: 'release', rust-version: 'stable'     }
          - {os: ubuntu-20.04,   r: 'devel',   rust-version: 'stable'     }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.rust-version }}
          default: true

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools-version }}
          use-public-rspm: true

      - name: Configure Windows
        if: startsWith(runner.os, 'Windows') && matrix.config.r != 'devel'
        run: |
          rustup target add x86_64-pc-windows-gnu
          rustup target add i686-pc-windows-gnu

      - name: Configure Windows (R-devel)
        if: startsWith(runner.os, 'Windows') && matrix.config.r == 'devel'
        run: |
          rustup target add x86_64-pc-windows-gnu

          # To confirm the tests work without the legacy toolchains, remove them
          Remove-Item -Recurse -Force "${env:RTOOLS40_HOME}\mingw64"
          Remove-Item -Recurse -Force "${env:RTOOLS40_HOME}\mingw32"
          Remove-Item -Recurse -Force "${env:RTOOLS40_HOME}\ucrt64"

          $rtools42_home = "C:\rtools42"

          # rustc adds -lgcc_eh and -lgcc_s flag to the compiler, but there's no libgcc_eh or libgcc_a in Rtools42.
          # For more details, please refer to https://github.com/r-windows/rtools-packages/blob/2407b23f1e0925bbb20a4162c963600105236318/mingw-w64-gcc/PKGBUILD#L313-L316
          cp `
            "${rtools42_home}\x86_64-w64-mingw32.static.posix\lib\gcc\x86_64-w64-mingw32.static.posix\10.3.0\libgcc.a" `
            "${rtools42_home}\x86_64-w64-mingw32.static.posix\lib\gcc\x86_64-w64-mingw32.static.posix\10.3.0\libgcc_eh.a"

          cp `
            "${rtools42_home}\x86_64-w64-mingw32.static.posix\lib\gcc\x86_64-w64-mingw32.static.posix\10.3.0\libgcc.a" `
            "${rtools42_home}\x86_64-w64-mingw32.static.posix\lib\gcc\x86_64-w64-mingw32.static.posix\10.3.0\libgcc_s.a"

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: rcmdcheck

      - uses: r-lib/actions/check-r-package@v2
