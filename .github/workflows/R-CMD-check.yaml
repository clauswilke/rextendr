on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }} - ${{ matrix.config.rust-version }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # On Windows,
          #
          # * for R >= 4.2, both the MSVC toolchain and the GNU toolchain should
          #   work. Since our main support is on MSVC, we mainly test MSVC here.
          #   Also, at least one GNU case should be included so that we can
          #   detect when something gets broken.
          # * for R < 4.2, the MSVC toolchain must be used to support
          #   cross-compilation for the 32-bit.
          - {os: windows-latest, r: 'release', rust-version: 'stable-msvc', rtools-version: '42'}
          - {os: windows-latest, r: 'devel',   rust-version: 'stable-msvc'}
          - {os: windows-latest, r: 'release', rust-version: 'stable-gnu',  rtools-version: '42'}
          - {os: windows-latest, r: '4.1',     rust-version: 'stable-msvc'}  # TODO: Remove this runner when we drop the support for R < 4.2

          - {os: macOS-latest,   r: 'release', rust-version: 'stable'     }

          - {os: ubuntu-latest,  r: 'release', rust-version: 'stable'     }
          - {os: ubuntu-latest,  r: 'devel',   rust-version: 'stable'     }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      REXTENDR_PATCH_CRATES_IO: 'libR-sys = { git = "https://github.com/extendr/libR-sys" }'

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.config.rust-version }}

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools-version }}
          # TODO: enable RSPM when all the packages are available
          use-public-rspm: false

      - name: Configure Windows (R >= 4.2)
        if: startsWith(runner.os, 'Windows') && matrix.config.r != '4.1'
        run: |
          rustup target add x86_64-pc-windows-gnu

          # To confirm the tests work without the legacy toolchains, remove them
          Remove-Item -Recurse -Force "${env:RTOOLS40_HOME}\mingw64"
          Remove-Item -Recurse -Force "${env:RTOOLS40_HOME}\mingw32"
          Remove-Item -Recurse -Force "${env:RTOOLS40_HOME}\ucrt64"


      # TODO: Remove this runner when we drop the support for R < 4.2
      - name: Configure Windows (R < 4.2)
        if: startsWith(runner.os, 'Windows') && matrix.config.r == '4.1'
        run: |
          rustup target add x86_64-pc-windows-gnu
          rustup target add i686-pc-windows-gnu

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: rcmdcheck

      - uses: r-lib/actions/check-r-package@v2
